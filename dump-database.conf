# Copy me to /etc/dump-database.conf
# Make sure to chmod me to 0400


# Target Directory
TARGET="/shared/backup/databases"

# Prefix for database dump file
PREFIX="$(date '+%Y-%m-%d')_$(date '+%H-%M')__"



######################################################################
# MySQL
######################################################################

# Never ever pass the mysql credentials on the command line via
# --password / -p as this can be seen by all users in ps aux or top.
# Instead use a *.cnf file with a user that only has read access
# @see dump-database.cnf for example
MYSQL_CNF_FILE='/etc/dump-database.cnf'

# MySQLDump Options
# --routines (FALSE by default)
# --events   (FALSE by default)
# --triggers (TRUE by default)
MYSQL_OPTS='--events --triggers --routines --single-transaction --quick'

# Databases not to be dumped (space separated)
IGNORE="mysql information_schema performance_schema"



######################################################################
# Logging
######################################################################

# Log output to logfile
# 1: yes
# 0: no (Default)
LOG=1


# Only applicable if LOG = 1
# Must be writeable by the user who runs the script
LOGFILE="/var/log/dump-database.log"



######################################################################
# Compression
######################################################################

#
# Compression is done via gzip 9
#

# Use gzip compression?
# 1: yes
# 0: no (Default)
COMPRESS=1



######################################################################
# Encryption
######################################################################

#
# Encryption is done via openssl smime public/private key.
# This means the files can only be decrypted with a private key
# which should be placed somewhere safe (not on the same machine).
# Encryption is done via the public key which can be readable.
# @required   openssl
#
# Examples:
#
# * Create public/private key pair
#    openssl req -x509 -nodes -newkey rsa:2048 -keyout dump-database.priv.pem -out dump-database.pub.pem
#
# * How to enccrypt? (pubkey)
#    openssl smime -encrypt -binary -text -aes256 -in file.txt -out file.txt.enc" -outform DER dump-database.pub.pem
#
# * How to decrypt? (privkey)
#    openssl smime -decrypt -in file.txt.enc -binary -inform DEM -inkey dump-database.priv.pem -out file.txt



# Encrypt database dumps?
# 1: yes
# 0: no (Default)
ENCRYPT=1

# Only applicable if ENCRYPT = 1
# OpenSSL Public key in PEM format without passphrase
OPENSSL_PUBKEY_PEM="/etc/dump-database.pub.pem"

# Only applicable if ENCRYPT = 1
# Must be valid openssl encryption algorithm
OPENSSL_ALGO_ARG="-aes256"



######################################################################
# Delete old files?
######################################################################

#
# This relies completely on tmpwatch and will delete all files recursively
# which modification time is older than X hours.
# tmpwatch behavior applies:
#  * no symbolic links
#  * recursive
# @required   tmpwatch
#
# Command parsed to tmpwatch
#
# tmpwatch -m ${DELETE_IF_OLDER} -v ${TARGET}/
#

# Delete old files
# 1: yes
# 0: no (Default)
DELETE=0


# Only applicable of DELETE = 1
# Delete all files recursively which modification time
# is older than this
# e.g.
# DELETE_IF_OLDER=720	# 30 days
#
# NOTE: Only positive integers greater than zero are allowed
#       Everything else will disable deletion.
DELETE_IF_OLDER=720		# older than 30 days
